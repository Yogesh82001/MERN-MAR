const add = ()=>1000;
undefined
typeof add;
'function'
add();
1000
const add2 = (x,y)=> x + y;
undefined
add2(100,200);
300
const add3 = (x,y)=>{ 
    console.log('X is ',x, 'Y is ', y);
    return x + y;
}
undefined
add3(100,200);
VM456:2 X is  100 Y is  200
300
const e = add;
undefined
typeof e;
'function'
e();
1000
var arr = [10,20,30,40,50];
undefined
typeof arr;
'object'
arr.length;
5
arr.push(1000);
6
arr.length;
6
var t = 100;
undefined
typeof t;
'number'
arr.pop();
1000
arr;
(5) [10, 20, 30, 40, 50]
arr.find(30);
VM943:1 Uncaught TypeError: 30 is not a function
    at Array.find (<anonymous>)
    at <anonymous>:1:5
(anonymous) @ VM943:1
var shoe = {name:'Casual Shoe', brand :'puma', price:1200};
undefined
var shoes = [shoe, {name:'Formal Shoe', brand:'bata', price:1100}];
undefined
shoes.find((shoe)=>shoe.price>=1100);
{name: 'Casual Shoe', brand: 'puma', price: 1200}
shoes.find((currentShoe)=>currentShoe.price>=1100);
{name: 'Casual Shoe', brand: 'puma', price: 1200}
shoes.filter((shoe)=>shoe.price>=1100);
(2) [{…}, {…}]0: {name: 'Casual Shoe', brand: 'puma', price: 1200}1: {name: 'Formal Shoe', brand: 'bata', price: 1100}length: 2[[Prototype]]: Array(0)
shoes.filter((shoe)=>shoe.price>=11000);
[]
var arr = [10,20,30,30,50,90,100,20,88,55];
undefined
arr.pop();
55
arr;
(9) [10, 20, 30, 30, 50, 90, 100, 20, 88]
arr.shift();
10
arr;
(8) [20, 30, 30, 50, 90, 100, 20, 88]
arr.push(1000);
9
arr;
(9) [20, 30, 30, 50, 90, 100, 20, 88, 1000]
arr.unshift(1111);
10
arr;
(10) [1111, 20, 30, 30, 50, 90, 100, 20, 88, 1000]
arr.splice(1);
(9) [20, 30, 30, 50, 90, 100, 20, 88, 1000]
arr;
[1111]
var arr = [10,20,30,30,50,90,100,20,88,55];
undefined
arr.splice(1,2);
(2) [20, 30]
arr;
(8) [10, 30, 50, 90, 100, 20, 88, 55]
arr.splice(1,0,22222);
[]
arr;
(9) [10, 22222, 30, 50, 90, 100, 20, 88, 55]0: 101: 222222: 303: 504: 905: 1006: 207: 888: 55length: 9[[Prototype]]: Array(0)
arr.splice(2,1,300);
[30]
arr;
(9) [10, 22222, 300, 50, 90, 100, 20, 88, 55]
arr[2] = 44444;
44444
arr;
(9) [10, 22222, 44444, 50, 90, 100, 20, 88, 55]
arr.splice(1,3,999,4444,2222);
(3) [22222, 44444, 50]
arr;
(9) [10, 999, 4444, 2222, 90, 100, 20, 88, 55]
arr;
(9) [10, 999, 4444, 2222, 90, 100, 20, 88, 55]
arr.length=arr.length-4;
5
arr;
(5) [10, 999, 4444, 2222, 90]
var arr = [10,20,30,30,50,90,100,20,88,55];
undefined
arr.findIndex(e=>e>=50);
4
arr = arr.filter(e=>e<50);
(5) [10, 20, 30, 30, 20]
arr;
(5) [10, 20, 30, 30, 20]
var t = [...arr];
undefined
t==arr;
false
var g = arr.filter(e=>true);
undefined
g;
(5) [10, 20, 30, 30, 20]
arr.findIndex(e=>e<50);
0
arr.forEach(e=>console.log(e));
VM3005:1 10
VM3005:1 20
VM3005:1 30
VM3005:1 30
VM3005:1 20
undefined
const show = x=>x*x;
undefined
show(2);
4
arr.forEach((e, index)=>console.log(e, index));
VM3221:1 10 0
VM3221:1 20 1
VM3221:1 30 2
VM3221:1 30 3
VM3221:1 20 4
undefined
arr.forEach((e, index, a)=>console.log(e, index,a));
VM3287:1 10 0 (5) [10, 20, 30, 30, 20]
VM3287:1 20 1 (5) [10, 20, 30, 30, 20]
VM3287:1 30 2 (5) [10, 20, 30, 30, 20]
VM3287:1 30 3 (5) [10, 20, 30, 30, 20]
VM3287:1 20 4 (5) [10, 20, 30, 30, 20]
undefined
arr;
(5) [10, 20, 30, 30, 20]
arr.map(e=>e*0.10);
(5) [1, 2, 3, 3, 2]
arr.map(e=>e**3);
(5) [1000, 8000, 27000, 27000, 8000]
arr.map(e=>e);
(5) [10, 20, 30, 30, 20]
arr.sort((a,b)=>a-b);
(5) [10, 20, 20, 30, 30]
arr;
(5) [10, 20, 20, 30, 30]
arr.sort((a,b)=>b-a);
(5) [30, 30, 20, 20, 10]
var names= ['ram','ajay', 'shyam', 'anil'];
undefined
'ram'.localeCompare('ajay')
1
'ajay'.localeCompare('ram')
-1
'ajay'.localeCompare('ajay')
0
names.sort((a,b)=>a.localeCompare(b));
(4) ['ajay', 'anil', 'ram', 'shyam']
arr;
(5) [30, 30, 20, 20, 10]
arr.sort();
(5) [10, 20, 20, 30, 30]
arr.push(100);
6
arr.push(1000);
7
arr.push(10000);
8
arr;
(8) [10, 20, 20, 30, 30, 100, 1000, 10000]
arr.sort();
(8) [10, 100, 1000, 10000, 20, 20, 30, 30]
arr.reduce((acc, ele)=>acc+ele);
11210
arr.reduce((acc, ele)=>acc+ele, 0);
11210
